name: Flutter Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:  # Trigger manuale

env:
  FLUTTER_VERSION: "3.27.1"
  JAVA_VERSION: "17"  # Versione di Java per entrambi i job

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        include:
          - os: macos-latest
            platform: ios
          - os: ubuntu-latest
            platform: android
          
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Setup Java 17
      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'adoptopenjdk'

      # Setup Flutter
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}

      # Install dependencies
      - name: Install dependencies
        run: flutter pub get

      # Clean previous builds
      - name: Clean previous builds
        run: flutter clean

      # Run lint check
      - name: Run lint check
        run: flutter analyze

      # Platform-specific builds
      - name: Build iOS .ipa
        if: matrix.platform == 'ios'
        run: |
          flutter build ipa --release
        working-directory: .

      - name: Build Android APKs
        if: matrix.platform == 'android'
        run: |
          flutter build apk --split-per-abi
        working-directory: .

      # Upload artifacts (iOS and Android)
      - name: Upload artifact (iOS)
        if: matrix.platform == 'ios'
        uses: actions/upload-artifact@v3
        with:
          name: ios-ipa
          path: build/ios/ipa/*.ipa

      - name: Upload artifact (Android)
        if: matrix.platform == 'android'
        uses: actions/upload-artifact@v3
        with:
          name: android-apk
          path: build/app/outputs/flutter-apk/*.apk
